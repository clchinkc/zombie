[
    {
        "label": "streamlit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "streamlit",
        "description": "streamlit",
        "detail": "streamlit",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "plotly.express",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "plotly.express",
        "description": "plotly.express",
        "detail": "plotly.express",
        "documentation": {}
    },
    {
        "label": "yfinance",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "yfinance",
        "description": "yfinance",
        "detail": "yfinance",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "graph_objs",
        "importPath": "plotly",
        "description": "plotly",
        "isExtraImport": true,
        "detail": "plotly",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "tensorflow",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tensorflow",
        "description": "tensorflow",
        "detail": "tensorflow",
        "documentation": {}
    },
    {
        "label": "Sequential",
        "importPath": "tensorflow.keras.models",
        "description": "tensorflow.keras.models",
        "isExtraImport": true,
        "detail": "tensorflow.keras.models",
        "documentation": {}
    },
    {
        "label": "Dense",
        "importPath": "tensorflow.keras.layers",
        "description": "tensorflow.keras.layers",
        "isExtraImport": true,
        "detail": "tensorflow.keras.layers",
        "documentation": {}
    },
    {
        "label": "LSTM",
        "importPath": "tensorflow.keras.layers",
        "description": "tensorflow.keras.layers",
        "isExtraImport": true,
        "detail": "tensorflow.keras.layers",
        "documentation": {}
    },
    {
        "label": "MinMaxScaler",
        "importPath": "sklearn.preprocessing",
        "description": "sklearn.preprocessing",
        "isExtraImport": true,
        "detail": "sklearn.preprocessing",
        "documentation": {}
    },
    {
        "label": "option_menu",
        "importPath": "streamlit_option_menu",
        "description": "streamlit_option_menu",
        "isExtraImport": true,
        "detail": "streamlit_option_menu",
        "documentation": {}
    },
    {
        "label": "load_data",
        "kind": 2,
        "importPath": "stock_market_prediction",
        "description": "stock_market_prediction",
        "peekOfCode": "def load_data(ticker):\n    data = yf.download(ticker, START, END)\n    data.reset_index(inplace=True)\n    return data\nmy_bar=st.progress(0)\ndef update_progress(progress):\n        my_bar.progress(progress)\nif selected=='About':\n    taba, tabc = st.tabs([\"Introduction\",\"Procedure\"])\n    with taba:",
        "detail": "stock_market_prediction",
        "documentation": {}
    },
    {
        "label": "update_progress",
        "kind": 2,
        "importPath": "stock_market_prediction",
        "description": "stock_market_prediction",
        "peekOfCode": "def update_progress(progress):\n        my_bar.progress(progress)\nif selected=='About':\n    taba, tabc = st.tabs([\"Introduction\",\"Procedure\"])\n    with taba:\n        st.title('Stock Makert Prediction.')\n        st.header('Please Note: This app is created just for educational purpose.')\n        st.write('-    Stock market prediction using stacked LSTM is a popular application of deep learning in finance..Several LSTM layers make up a stacked LSTM model, a kind of recurrent neural network (RNN). A series of historical stock market data, including daily stock prices, trading volume serves as the input of the model.The output is a forecast of future stock price movement.')\n        st.write('-    The stacked LSTM model employs a number of levels of LSTM cells, each layer made up of a number of LSTM units. The first layer of the model receives the input data, while the subsequent layers receive the output of the previous layer as input. When each layer can capture more abstract and high-level representations of the input, the model is able to learn increasingly complicated patterns in the input data.')\n        st.write('-    Once trained, the model can be used to make predictions based on fresh, unused data. A series of historical data are used as the input, and its output is a forecast of how the stock price will move in the future. To assess the accuracy, the projected values and the actual values can be compared.')",
        "detail": "stock_market_prediction",
        "documentation": {}
    },
    {
        "label": "END",
        "kind": 5,
        "importPath": "stock_market_prediction",
        "description": "stock_market_prediction",
        "peekOfCode": "END =  dt.datetime.today()\n@st.cache_data\ndef load_data(ticker):\n    data = yf.download(ticker, START, END)\n    data.reset_index(inplace=True)\n    return data\nmy_bar=st.progress(0)\ndef update_progress(progress):\n        my_bar.progress(progress)\nif selected=='About':",
        "detail": "stock_market_prediction",
        "documentation": {}
    }
]